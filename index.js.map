{"version":3,"file":"index.js","sources":["source/utils.js","source/types/Array.js","source/types/Boolean.js","source/types/Date.js","source/types/Error.js","source/types/Function.js","source/types/Map.js","source/types/Number.js","source/types/Object.js","source/types/Set.js","source/types/String.js","source/types/Symbol.js","source/types/index.js","source/max-depth.js","source/data.js"],"sourcesContent":["// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nexport const MAX_FUNC_STR_LEN = 30;\n\nexport const setCustomClassNameTo = (data, className) =>\n  (data.className = className);\n\nexport const getCustomClassNameFrom = (data) => data.className || '';\n\nexport const canPassAsIs = (value) => typeof value === 'string';\n\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\n\nexport const keyNeedsConversion = (key) =>\n  !(canPassAsIs(key) && validKeyRgx.test(key));\n\nexport const isNested = (value) => value && typeof value === 'object';\n\nexport const setNestedWraps = (value, pre, post) => {\n  value.pre = pre;\n  value.post = post;\n};\n\nexport const getNestedWraps = ({ pre, post }) => ({ pre, post });\n\nexport const setNestedShortContent = (value, short) => {\n  value.short = short;\n};\n\nexport const getNestedShortContent = (value) => value.short;\n\nexport const isList = (target) => isNested(target) && target.type === 'list';\n\nexport const createList = () => ({\n  type: 'list',\n  values: [],\n  pre: '[',\n  post: ']',\n});\n\nexport const addToList = ({ values }, index, value) => (values[index] = value);\n\nexport const iterateList = ({ values }, handler) =>\n  values.forEach((value, index) => handler(value, index));\n\nexport const getListSize = ({ values }) => values.length;\n\nexport const isStorage = (target) =>\n  isNested(value) && target.type === 'storage';\n\nexport const createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: [],\n  pre: '{',\n  post: '}',\n});\n\nexport const addToStorage = ({ keys, values }, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\n\nexport const iterateStorage = (storage, handler) => {\n  const { keys, values } = storage;\n\n  keys.forEach((key, index) => handler(values[index], key));\n};\n\nexport const getStorageSize = ({ keys }) => keys.length;\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo, createList, addToList } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createList();\n\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","export default (value) => `Date(${value})`;\n","import {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const { name, message, columnNumber, fileName, lineNumber } = value;\n\n  const result = createStorage();\n\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n\n  setCustomClassNameTo(result, name || 'Error');\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  MAX_FUNC_STR_LEN,\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n  setNestedWraps,\n  setNestedShortContent,\n} from '../utils';\n\nexport default (value) => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClassName(value) || 'Function';\n\n  let { name } = value;\n\n  if (!name) {\n    name = content\n      .replace(/\\s+/g, ' ')\n      .substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n\n    if (content.length < MAX_FUNC_STR_LEN) {\n      name = `${name}...`;\n    }\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'code', content);\n  setNestedWraps(result, '(', ')');\n  setNestedShortContent(result, name);\n  setCustomClassNameTo(result, type);\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createStorage();\n\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n  keyNeedsConversion,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createStorage();\n\n  Object.keys(value).forEach((key) => {\n    try {\n      addToStorage(\n        result,\n        keyNeedsConversion(key) ? convertValue(key) : key,\n        convertValue(value[key]),\n      );\n    } catch (error) {\n      /* Possible SecurityError when accessing properties from restricted origin */\n    }\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo, createList, addToList } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createList();\n  // remove need in indexes for Set\n  let index = 0;\n\n  value.forEach((item) => {\n    addToList(result, index++, convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => JSON.stringify(value);\n","export default (value) => String(value);\n","import getClass from '@actualwave/get-class';\n\nimport convertArray from './Array';\nimport convertBoolean from './Boolean';\nimport convertDate from './Date';\nimport convertError from './Error';\nimport convertFunction from './Function';\nimport convertMap from './Map';\nimport convertNumber from './Number';\nimport convertObject from './Object';\nimport convertSet from './Set';\nimport convertString from './String';\nimport convertSymbol from './Symbol';\n\n// Every value in JS has .constructor property\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\nexport const addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\n\nexport const hasTypeHandler = (constructor) => types.has(constructor);\n\nexport const getTypeHandler = (constructor) => types.get(constructor);\n\nexport const removeTypeHandler = (constructor) => types.delete(constructor);\n\nexport const defaultTypeHandlerSelector = (value) => {\n  const type = getClass(value);\n\n  return type && getTypeHandler(type);\n};\n\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\nexport const selectTypeHandler = (value) => typeHandlerSelector(value);\n\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\nexport const setTypeHandlerSelector = (newSelector) => {\n  typeHandlerSelector = newSelector;\n};\n\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n","import { singleValueFactory } from '@actualwave/closure-value';\n\nexport const {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth,\n} = singleValueFactory(2);\n","import convertArray from './types/Array';\nimport convertBoolean from './types/Boolean';\nimport convertDate from './types/Date';\nimport convertError from './types/Error';\nimport convertFunction from './types/Function';\nimport convertMap from './types/Map';\nimport convertNumber from './types/Number';\nimport convertObject from './types/Object';\nimport convertSet from './types/Set';\nimport convertString from './types/String';\nimport convertSymbol from './types/Symbol';\n\nimport { getMaxNesingDepth } from './max-depth';\n\nimport { selectTypeHandler } from './types';\n\nexport const isString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n    default:\n      return value === null || value instanceof Date;\n  }\n};\n\nexport const toString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n    case 'string':\n      return convertString(value);\n    case 'boolean':\n      return convertBoolean(value);\n    case 'number':\n      return convertNumber(value);\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      try {\n        return `${value}`;\n      } catch (error) {\n        return '[object Non-Serializable]';\n      }\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nexport const convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n  const nextConvert = (propValue) => convert(propValue, level + 1, refs);\n  let result;\n\n  if (handler) {\n    result = handler(value, nextConvert, refs);\n  }\n\n  result = fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n"],"names":["MAX_FUNC_STR_LEN","setCustomClassNameTo","data","className","getCustomClassNameFrom","canPassAsIs","value","validKeyRgx","keyNeedsConversion","key","test","isNested","setNestedWraps","pre","post","getNestedWraps","setNestedShortContent","short","getNestedShortContent","isList","target","type","createList","values","addToList","index","iterateList","handler","forEach","getListSize","length","isStorage","createStorage","keys","addToStorage","push","iterateStorage","storage","getStorageSize","convertValue","result","item","getClassName","name","message","columnNumber","fileName","lineNumber","content","String","replace","substr","Object","error","JSON","stringify","types","Map","addTypeHandler","constructor","delete","set","hasTypeHandler","has","getTypeHandler","get","removeTypeHandler","defaultTypeHandlerSelector","getClass","typeHandlerSelector","selectTypeHandler","setTypeHandlerSelector","newSelector","Array","convertArray","Boolean","convertBoolean","Date","convertDate","Error","convertError","Function","convertFunction","convertMap","Number","convertNumber","convertObject","Set","convertSet","convertString","Symbol","convertSymbol","getMaxNesingDepth","setMaxNesingDepth","singleValueFactory","isString","toString","fallbackConversion","refs","convert","level","undefined","maxLevel","complex","nextConvert","propValue"],"mappings":"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"}